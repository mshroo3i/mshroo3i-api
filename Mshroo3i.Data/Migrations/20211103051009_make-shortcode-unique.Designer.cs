// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mshroo3i.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Mshroo3i.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211103051009_make-shortcode-unique")]
    partial class makeshortcodeunique
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Mshroo3i.Domain.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("PriceIncrement")
                        .HasColumnType("double precision")
                        .HasColumnName("price_increment");

                    b.Property<int?>("ProductOptionId")
                        .HasColumnType("integer")
                        .HasColumnName("product_option_id");

                    b.HasKey("Id")
                        .HasName("pk_options");

                    b.HasIndex("ProductOptionId")
                        .HasDatabaseName("ix_options_product_option_id");

                    b.ToTable("options");
                });

            modelBuilder.Entity("Mshroo3i.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int?>("StoreId")
                        .HasColumnType("integer")
                        .HasColumnName("store_id");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("StoreId")
                        .HasDatabaseName("ix_products_store_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Mshroo3i.Domain.ProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("option_name");

                    b.Property<string>("OptionType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("option_type");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("pk_product_options");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_product_options_product_id");

                    b.ToTable("product_options");
                });

            modelBuilder.Entity("Mshroo3i.Domain.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("HeroImg")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hero_img");

                    b.Property<string>("InstagramHandle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instagram_handle");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("LogoImg")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logo_img");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Owner")
                        .HasColumnType("integer")
                        .HasColumnName("owner");

                    b.Property<string>("Shortcode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shortcode");

                    b.HasKey("Id")
                        .HasName("pk_stores");

                    b.HasIndex("Shortcode")
                        .IsUnique()
                        .HasDatabaseName("ix_stores_shortcode");

                    b.ToTable("stores");
                });

            modelBuilder.Entity("Mshroo3i.Domain.Option", b =>
                {
                    b.HasOne("Mshroo3i.Domain.ProductOption", null)
                        .WithMany("Options")
                        .HasForeignKey("ProductOptionId")
                        .HasConstraintName("fk_options_product_options_product_option_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mshroo3i.Domain.Product", b =>
                {
                    b.HasOne("Mshroo3i.Domain.Store", null)
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("fk_products_stores_store_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mshroo3i.Domain.ProductOption", b =>
                {
                    b.HasOne("Mshroo3i.Domain.Product", null)
                        .WithMany("ProductOptions")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_product_options_products_product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Mshroo3i.Domain.Product", b =>
                {
                    b.Navigation("ProductOptions");
                });

            modelBuilder.Entity("Mshroo3i.Domain.ProductOption", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Mshroo3i.Domain.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
